# -*- coding: utf-8 -*-
"""exercise_5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VJ_muZDG46C60D4tW1JkyLagq6bFibwb
"""

#Proyecto 1 - Problema 5

import random
import math
class p_aleatorios:
  def __init__(self):
    self.x_inicial = 0
    self.y_inicial = 0
    self.z_inicial = 0

    self.x_final = 0
    self.y_final = 0
    self.z_final = 0

  def coor_inicial(self):
    self.x_inicial = random.randint(1,1000)
    self.y_inicial = random.randint(1,1000)
    self.z_inicial = random.randint(1,1000)
  def vec_aleatorios(self, N_vec):
    sum_x = 0
    sum_y = 0
    sum_z = 0
    for vec in range(N_vec):
        r = random.randint(0,10)
        theta = math.radians(random.randint(0, 180))
        phi = math.radians(random.randint(0, 360))
        x1 = r*math.sin(theta)*math.cos(phi)
        y1 = r*math.sin(theta)*math.sin(phi)
        z1 = r*math.cos(theta)
        sum_x += x1
        sum_y += y1
        sum_z += z1
    self.x_final = self.x_inicial + sum_x
    self.y_final = self.y_inicial + sum_y
    self.z_final = self.z_inicial + sum_z



#fuera de la clase

def crear_puntos(n: int):
  lista_puntos = []
  if 1 <= n <= 10:
    for i in range(n):
        p = p_aleatorios()
        lista_puntos.append(p)
  else:
    print("ERROR: ingrese un nÃºmero entre 1 y 10")
  return lista_puntos

def establecer_coor_ini(objetos):
  for objeto in objetos:
    objeto.coor_inicial()

def sumar_vectores(objetos, n):
  if 2 <= n <= 100:
    for objeto in objetos:
      objeto.vec_aleatorios(n)
  else:
    print("No puede ingresar mas de 100 vectores ni menos que 2")
def ver_cambios(objetos):
   for objeto in objetos:
    print("Inicial: ", [objeto.x_inicial, objeto.y_inicial, objeto.z_inicial])
    print("Final:   ", [round(objeto.x_final, 2), round(objeto.y_final, 2), round(objeto.z_final, 2)])

puntos = crear_puntos(2)

puntos

ver_cambios(puntos)

establecer_coor_ini(puntos)

sumar_vectores(puntos, 20)